//
//  MainMenuInteractor.swift
//  ProjectPPD
//
//  Created by Clinton de Sá Barreto Maciel on 06/02/19.
//  Copyright (c) 2019 Clinton de Sá. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftGRPC

protocol MainMenuBusinessLogic {
    func connectToNameServer(request: MainMenu.ConnectToNameServer.Request)
}

protocol MainMenuDataStore {
    var client: NoteServiceServiceClient? { get set }
    var clientName: String? { get set }
//    var oponent: (RPCHandler & RPCChatDelegate)? { get set }
}

class MainMenuInteractor: MainMenuBusinessLogic, MainMenuDataStore {
    var presenter: MainMenuPresentationLogic?
    var worker: MainMenuWorker?
    
    // MARK: DataStore
    
    var client: NoteServiceServiceClient?
    var clientName: String?
    
    // MARK: Connect to name server
    
    func connectToNameServer(request: MainMenu.ConnectToNameServer.Request) {
        self.client = NoteServiceServiceClient(address: "127.0.0.1:\(request.portNumber)", secure: false)
        
        _ = try? self.client?.username(Empty(), completion: { (chatMessageContainigUsername, _) in
            self.clientName = chatMessageContainigUsername?.content ?? ""
            let response = MainMenu.ConnectToNameServer.Response(username: self.clientName!)
            self.presenter?.presentConnecToNameServer(response: response)
        })
    }
}



