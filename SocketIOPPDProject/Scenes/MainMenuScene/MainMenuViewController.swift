//
//  MainMenuViewController.swift
//  ProjectPPD
//
//  Created by Clinton de Sá Barreto Maciel on 06/02/19.
//  Copyright (c) 2019 Clinton de Sá. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SCLAlertView

protocol MainMenuDisplayLogic: class {
    func displayConnectToServer(viewModel: MainMenu.ConnectToNameServer.ViewModel)
}

class MainMenuViewController: UIViewController {
    
    // MARK: Static
    
    static let viewIdentifier = "MainMenuViewController"
    
    // MARK: VIP refences
    
    var interactor: MainMenuBusinessLogic?
    var router: (NSObjectProtocol & MainMenuRoutingLogic & MainMenuDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = MainMenuInteractor()
        let presenter = MainMenuPresenter()
        let router = MainMenuRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: Control variables
    
    var alertResponder: SCLAlertViewResponder?
    
    // MARK: View lifecycle
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
//        router?.routeToGameplayFlux()
    }
    
    // MARK: Actions
    
    @IBAction func searchForMatch(_ sender: Any) {        
        AlertHelper.showFieldAlert(withTitle: "Iniciar partida", andSubtitle: "Iniciar partida com servidor de nomes na porta:") { (portNumber) in
            let request = MainMenu.ConnectToNameServer.Request(portNumber: portNumber)
            self.interactor?.connectToNameServer(request: request)
        }
    }
}

extension MainMenuViewController: MainMenuDisplayLogic {
    
    // MARK: Connect to name server
    
    func displayConnectToServer(viewModel: MainMenu.ConnectToNameServer.ViewModel) {
        DispatchQueue.main.asyncAfter(deadline: DispatchTime.now() + 1) {
            self.router?.routeToGameplayFlux()
        }
    }
}
